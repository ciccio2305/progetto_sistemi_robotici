def Run_1():
    fixed_shortest_path = [
        (2.808, 7.091999999999999),
        (3.228456913827653, 6.727454909819636),
        (4.058116232464929, 5.464929859719437),
        (4.923847695390782, 4.202404809619237),
        (4.887775551102202, 2.9759519038076157),
        (3.6613226452905803, 2.146292585170338),
        (2.5430861723446867, 1.8216432865731456),
        (1.929859719438877, 0.3787575150300597),
        (1.2805611222444888, -1.064128256513027),
        (0.6673346693386755, -2.507014028056113),
        (1.3527054108216436, -3.336673346693387),
        (1.6920000000000002, -4.32)
    ]

    circles_center_and_scale = [
        ((2.34, 4.464), 3.6),
        ((-0.07199999999999918, 1.008000000000001), 3.9),
        ((-5.9399999999999995, 6.048), 4.7),
        ((6.6240000000000006, 1.4399999999999995), 1.9),
        ((-4.68, -5.832000000000001), 5.0),
        ((-2.088, 4.644), 2.1),
        ((-0.25200000000000067, 6.948), 1.7),
        ((2.412000000000001, -6.912), 1.6),
        ((5.580000000000002, 6.6240000000000006), 3.3),
        ((3.7799999999999994, -0.6839999999999993), 4.0),
        ((-5.724, 0.4320000000000004), 4.8),
        ((-2.3040000000000003, -2.9159999999999995), 2.3),
        ((5.184000000000001, -4.14), 1.8),
        ((-0.4320000000000004, -6.048), 3.1),
        ((6.804, -2.268), 1.2)
    ]

    return fixed_shortest_path, circles_center_and_scale

def Run_2():
    fixed_shortest_path = [
        (6.8759999999999994, 6.119999999999999),
        (7.268537074148295, 4.599198396793586),
        (6.9078156312625225, 3.76953907815631),
        (5.93386773547094, 2.6152304609218415),
        (4.77955911823647, 1.9659318637274534),
        (3.3366733466933844, 1.9659318637274534),
        (2.2184368737474927, 1.9659318637274534),
        (2.0020040080160317, 0.6312625250501007),
        (1.3887775551102184, -0.23446893787575362),
        (0.7394789579158285, -0.7755511022044104),
        (-0.5591182364729477, -0.9198396793587182),
        (-2.0020040080160317, -1.388777555110221),
        (-2.628, -2.0519999999999996)
    ]

    circles_center_and_scale = [
        ((-4.859999999999999, -1.5840000000000005), 1.2),
        ((-6.228, 6.731999999999999), 1.5),
        ((1.9079999999999995, -2.5200000000000005), 1.5),
        ((-1.7639999999999993, 1.0800000000000018), 4.4),
        ((-0.32399999999999984, -5.976), 4.2),
        ((-0.7919999999999998, -2.3040000000000003), 1.8),
        ((-3.6720000000000006, -3.2039999999999997), 1.1),
        ((4.932, 3.815999999999999), 2.1),
        ((7.056000000000001, 2.16), 1.1),
        ((-6.408, -3.3120000000000003), 1.6),
        ((1.6199999999999992, 6.587999999999999), 3.7),
        ((4.968, 0.07199999999999918), 2.3),
        ((5.508000000000001, -5.04), 2.0),
        ((-2.0519999999999996, 6.228), 1.5),
        ((-6.732, 2.16), 2.1)
    ]

    return fixed_shortest_path, circles_center_and_scale

def Run_3():
    fixed_shortest_path = [
        (0.28800000000000026, 2.880000000000001),
        (1.2805611222444888, 2.2905811623246493),
        (1.3166332665330636, 1.4248496993987985),
        (0.8837675350701399, -0.01803607214428915),
        (0.6312625250501007, -1.460921843687375),
        (0.5591182364729459, -2.9038076152304617),
        (1.5691382765531046, -3.3727454909819645),
        (2.7234468937875747, -3.841683366733468),
        (3.4088176352705393, -4.887775551102205),
        (3.7079999999999984, -4.824)
    ]

    circles_center_and_scale = [
        ((7.056000000000001, 0.14400000000000013), 2.1),
        ((-5.724, -4.5), 3.4),
        ((4.68, -6.4799999999999995), 1.1),
        ((-0.28800000000000026, -6.192), 4.6),
        ((3.815999999999999, 4.212), 3.2),
        ((-1.476, -0.17999999999999972), 4.7),
        ((7.199999999999999, -2.7360000000000007), 1.0),
        ((-4.716, 2.7360000000000007), 3.7),
        ((-4.068, -7.164), 1.4),
        ((2.16, -0.8279999999999994), 2.4),
        ((-1.1520000000000001, 5.040000000000001), 2.7),
        ((-6.876, 0.17999999999999972), 1.4),
        ((6.372, 6.084), 1.1),
        ((5.364000000000001, -4.032), 1.3),
        ((2.3040000000000003, 7.056000000000001), 2.0)
    ]

    return fixed_shortest_path, circles_center_and_scale

def Run_4():
    fixed_shortest_path = [
        (-2.952, 3.096),
        (-2.110220440881765, 2.254509018036071),
        (-2.4709418837675354, 1.1002004008016026),
        (-2.0020040080160317, -0.1262525050100205),
        (-1.5330661322645298, -1.5691382765531081),
        (-1.1002004008016044, -2.687374749498999),
        (-2.507014028056113, -3.408817635270541),
        (-2.8316633266533078, -4.815631262525051),
        (-3.156312625250502, -6.258517034068136),
        (-2.615230460921845, -7.304609218436874),
        (-1.7639999999999993, -7.704000000000001)
    ]

    circles_center_and_scale = [
        ((-0.5759999999999987, 4.283999999999999), 1.1),
        ((5.184000000000001, 0.0), 1.1),
        ((6.048, -5.832000000000001), 4.5),
        ((-5.292, -4.356), 3.6),
        ((4.896000000000001, 4.068), 2.4),
        ((-5.0760000000000005, 1.404), 2.7),
        ((1.8360000000000003, 2.700000000000001), 2.9),
        ((6.84, 6.228), 1.9),
        ((-3.276, -1.1159999999999997), 2.1),
        ((-5.436, 5.687999999999999), 2.5),
        ((1.1879999999999988, -3.276), 1.6),
        ((-0.7919999999999998, -5.364), 2.6),
        ((-0.25200000000000067, -0.10800000000000054), 2.5),
        ((-2.34, 6.4079999999999995), 1.6),
        ((4.068, -2.1959999999999997), 1.6)
    ]

    return fixed_shortest_path, circles_center_and_scale

def Run_5():
    fixed_shortest_path = [
        (2.844000000000001, -2.8439999999999994),
        (2.3627254509018023, -4.166332665330662),
        (1.3166332665330636, -4.05811623246493),
        (-0.05410821643286745, -4.707414829659319),
        (-1.1002004008016044, -5.176352705410822),
        (-1.5691382765531081, -5.933867735470942),
        (-1.5691382765531081, -7.412825651302605),
        (-2.8316633266533078, -7.881763527054108),
        (-4.274549098196393, -8.062124248496994),
        (-5.176352705410822, -7.953907815631263),
        (-6.330661322645291, -7.593186372745491),
        (-7.052104208416834, -7.23246492985972),
        (-7.74, -5.796)
    ]

    circles_center_and_scale = [
        ((5.616000000000001, -5.868), 3.2),
        ((-4.824, 5.795999999999999), 4.6),
        ((3.312000000000001, 6.912000000000001), 1.0),
        ((-1.3319999999999999, 0.5760000000000005), 3.4),
        ((4.752000000000001, 2.808), 1.3),
        ((-4.14, -5.4719999999999995), 4.5),
        ((-0.4320000000000004, 4.32), 4.3),
        ((6.011999999999999, 6.263999999999999), 2.6),
        ((3.024000000000001, -1.0439999999999996), 1.9),
        ((2.2680000000000007, 2.2680000000000007), 1.3),
        ((-0.863999999999999, -4.068), 1.0),
        ((-4.032, -1.9799999999999995), 1.0),
        ((-0.07199999999999918, -5.904), 1.4),
        ((-5.652, 1.6559999999999988), 3.5),
        ((6.804, 0.8280000000000012), 2.7)
    ]

    return fixed_shortest_path, circles_center_and_scale

def Run_6():
    fixed_shortest_path = [
        (6.48, 6.4079999999999995),
        (6.07815631262525, 5.825651302605209),
        (4.923847695390782, 4.923847695390782),
        (4.490981963927853, 4.058116232464929),
        (5.104208416833666, 2.6152304609218415),
        (5.5370741482965915, 1.533066132264528),
        (4.527054108216433, 0.7034068136272538),
        (3.0841683366733452, 0.3066132264529049),
        (2.5430861723446867, -0.3787575150300597),
        (1.8937875751502986, -1.78557114228457),
        (1.533066132264528, -2.434869739478958),
        (1.331999999999999, -3.096)
    ]

    circles_center_and_scale = [
        ((-2.6640000000000006, -0.7199999999999989), 3.9),
        ((0.9359999999999999, 4.752000000000001), 2.8),
        ((-2.412, -5.220000000000001), 2.1),
        ((4.968, -6.444000000000001), 1.2),
        ((-2.3760000000000003, 4.356), 2.5),
        ((-6.300000000000001, -5.364), 2.7),
        ((4.5, -2.088), 5.0),
        ((-7.128, 1.2959999999999994), 2.2),
        ((-6.912, 3.9239999999999995), 2.1),
        ((3.9959999999999987, 6.912000000000001), 2.6),
        ((-0.6120000000000001, -2.9159999999999995), 1.4),
        ((3.3480000000000008, 2.1959999999999997), 2.6),
        ((1.2959999999999994, -5.976), 2.8),
        ((0.8280000000000012, -0.46799999999999997), 2.5),
        ((6.587999999999999, 3.564), 2.5)
    ]

    return fixed_shortest_path, circles_center_and_scale

def Run_7():
    fixed_shortest_path = [
        (-6.192, 6.552),
        (-5.428857715430862, 6.979959919839677),
        (-4.31062124248497, 6.547094188376754),
        (-3.985971943887775, 5.392785571142285),
        (-4.382765531062125, 3.949899799599198),
        (-4.671342685370742, 3.1923847695390766),
        (-4.959919839679359, 2.110220440881763),
        (-4.599198396793588, 0.6673346693386755),
        (-4.166332665330662, -0.7755511022044104),
        (-4.31062124248497, -1.9298597194388787),
        (-4.671342685370742, -2.687374749498999),
        (-3.8777555110220447, -3.913827655310622),
        (-4.212, -4.32)
    ]

    circles_center_and_scale = [
        ((3.7079999999999984, -0.3960000000000008), 3.1),
        ((-0.7199999999999989, 3.0600000000000005), 4.8),
        ((6.66, -0.25200000000000067), 1.5),
        ((-6.084, -0.10800000000000054), 2.7),
        ((2.7720000000000002, -5.292), 1.9),
        ((-1.0439999999999996, -2.16), 4.8),
        ((5.8679999999999986, -5.04), 2.5),
        ((-5.868, -4.968), 1.8),
        ((6.66, 3.959999999999999), 3.0),
        ((-6.66, 4.896000000000001), 1.2),
        ((2.3040000000000003, 5.040000000000001), 1.9),
        ((-0.6120000000000001, -6.84), 2.6),
        ((-0.5759999999999987, 6.912000000000001), 2.2),
        ((4.032, -3.168), 1.5),
        ((-3.276, 0.7200000000000006), 1.8)
    ]

    return fixed_shortest_path, circles_center_and_scale


def get_i_run(index):
    print (index)
    switcher = {
        1: Run_1,
        2: Run_2,
        3: Run_3,
        4: Run_4,
        5: Run_5,
        6: Run_6,
        7: Run_7
    }
    return switcher.get(index, lambda: "Invalid index")

# def main():
#     # Call all the functions
#     result_1 = Run_1()
#     result_2 = Run_2()
#     result_3 = Run_3()
#     result_4 = Run_4()
#     result_5 = Run_5()
#     result_6 = Run_6()
#     result_7 = Run_7()

#     # Print results
#     print("Result of Run_1:")
#     print("Fixed Shortest Path:", result_1[0])
#     print("Circles Center and Scale:", result_1[1])

#     print("\nResult of Run_2:")
#     print("Fixed Shortest Path:", result_2[0])
#     print("Circles Center and Scale:", result_2[1])

#     print("\nResult of Run_3:")
#     print("Fixed Shortest Path:", result_3[0])
#     print("Circles Center and Scale:", result_3[1])

#     print("\nResult of Run_4:")
#     print("Fixed Shortest Path:", result_4[0])
#     print("Circles Center and Scale:", result_4[1])

#     print("\nResult of Run_5:")
#     print("Fixed Shortest Path:", result_5[0])
#     print("Circles Center and Scale:", result_5[1])

#     print("\nResult of Run_6:")
#     print("Fixed Shortest Path:", result_6[0])
#     print("Circles Center and Scale:", result_6[1])

#     print("\nResult of Run_7:")
#     print("Fixed Shortest Path:", result_7[0])
#     print("Circles Center and Scale:", result_7[1])

# if __name__ == "__main__":
#     print(get_i_run(1)())